export module render;

import std;
import stormkit.core;
import ftxui;

import grid;
import potentials;
import rewriterule;
import rulenode;
import runner;

import model;

using namespace ftxui;
using namespace stormkit;

export namespace render {

using Palette = std::unordered_map<char, Color>;

Element grid(const TracedGrid<char>& g, const Palette& palette) noexcept;
Element potential_grid(const ::Potential& g) noexcept;

Element rule(const RewriteRule& rule, const Palette& palette) noexcept;

// Element ruleNode(const RuleNode& node, const Palette& palette) noexcept;

Element ruleRunner(const RuleRunner& node, const Palette& palette) noexcept;
Element treeRunner(const TreeRunner& node, const Palette& palette, bool selected = false) noexcept;
Element nodeRunner(const NodeRunner& node, const Palette& palette, bool selected = false) noexcept;

Element symbols(std::string_view values, const Palette& palette) noexcept;

Element model(const Model& node, const Palette& palette) noexcept;
}
